# TRAEFIK SERVICE, self-cert (autogenerated)
traefik:
  image: "%%MINIAPP_TRAEFIK_IMAGE%%"
  container_name: miniapp_traefik
  command:
    - "--configFile=/etc/traefik/traefik.yml"
  # ports:
  #   - "${MINIAPP_TRAEFIK_HTTP_PORT}:8080"
  #   - "${MINIAPP_TRAEFIK_HTTPS_PORT}:8443"
  #   - "${MINIAPP_TRAEFIK_DASHBOARD_PORT}:8081"
  ports:
      - target: 8080
        published: ${MINIAPP_TRAEFIK_HTTP_PORT}
        protocol: tcp
        mode: host
      - target: 8443
        published: ${MINIAPP_TRAEFIK_HTTPS_PORT}
        protocol: tcp
        mode: host
      - target: 8081
        published: ${MINIAPP_TRAEFIK_DASHBOARD_PORT}
        protocol: tcp
        mode: host
  volumes:
    # - ./traefik/:/etc/traefik/:ro   # for auto discovery of static and dynamic yml files
    - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    - ./traefik/certs:/etc/traefik/certs:ro  # âœ… Mount certificates
    - ./traefik/acme/acme.json:/etc/traefik/acme/acme.json  traefik:
    image: "${MINIAPP_TRAEFIK_IMAGE}" # "traefik:latest"
    container_name: ${MINIAPP_TRAEFIK_IMAGE_CONTAINER_NAME} # miniapp_traefik
    env_file:
      - .env.dev
    ports:
      # frontend (and backend for testing/debugging) web-service
      - "${MINIAPP_TRAEFIK_HTTP_PORT_HOST}:${MINIAPP_TRAEFIK_HTTP_PORT_CONT}" 
      
      # traefik dashboard
      - "${MINIAPP_TRAEFIK_DASHBOARD_PORT_HOST}:${MINIAPP_TRAEFIK_DASHBOARD_PORT_CONT}"

      # HTTPS entrypoint 
      - "${MINIAPP_TRAEFIK_HTTPS_PORT_HOST}:${MINIAPP_TRAEFIK_HTTPS_PORT_CONT}"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro         # static config
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro         # dynamic config
      - ./traefik/certs:/etc/traefik/certs:ro                     # certificates
      - ./traefik/acme/acme.json:/etc/traefik/acme/acme.json      # json file: do NOT set read-only !
      - "${MINIAPP_TRAEFIK_PODMAN_SOCK}:/var/run/docker.sock:ro"  # podman socket exported by setup_containers.sh
    networks:
      - ${NETWORK_PUBLIC_NAME}
    labels:
      - "traefik.enable=true"
      # HTTP dashboard router      
      - 'traefik.http.routers.dashboard.rule=Host("${MINIAPP_TRAEFIK_DOMAIN}")'
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"

      # Middleware call (see traefik.yml), for redirecting http to https, as defined by the file provider
      # pointing to  dynamic.yml (see "@file")
      - "traefik.http.routers.dashboard.middlewares=redirect-to-https@file"
      # HTTPS dashboard router
      - 'traefik.http.routers.dashboard-secure.rule=Host("${MINIAPP_TRAEFIK_DOMAIN}")' 
      - "traefik.http.routers.dashboard-secure.service=api@internal"
      - "traefik.http.routers.dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.dashboard-secure.tls=true" # TLS on https (NOT on http)
    - ./logs/access.log:/var/logs/access.log
    - ./logs/traefik.log:/var/logs/traefik.log
    - %%MINIAPP_TRAEFIK_PODMAN_SOCK%%:/var/run/docker.sock:ro
  networks:
    - ${NETWORK_PUBLIC_NAME}
  labels:
    - "traefik.enable=true"
    # HTTP router
    - "traefik.http.routers.dashboard.rule=Host(`traefik.localtest.me`)"
    - "traefik.http.routers.dashboard.service=api@internal"
    - "traefik.http.routers.dashboard.entrypoints=web"
    # Middleware Redirect
    - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
    # HTTPS router
    - "traefik.http.routers.dashboard-secure.rule=Host(`traefik.localtest.me`)"
    - "traefik.http.routers.dashboard-secure.entrypoints=websecure"
    - "traefik.http.routers.dashboard-secure.tls=true"
    - "traefik.http.routers.dashboard-secure.service=api@internal"